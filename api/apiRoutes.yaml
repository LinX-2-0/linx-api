swagger: "2.0"
info:
  version: "1.0.0"
  title: "Your API"
  description: "Description of your API"
basePath: "/"
paths:
  /api/users:
    get:
      summary: Get all users
      tags: [Users]
      responses:
        200:
          description: Returns all users

  /api/login:
    post:
      summary: Login
      tags: [User]
      parameters:
      - in: body
        name: data
        description: User data
        required: true
        schema:
          type: object
          properties:
            username:
              type: string
              description: Username for login
            password:
              type: string
              description: password for login
      responses:
        200:
          description: Login successful. Returns access and refresh tokens.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userData:
                    type: object
                    description: On succesfull the loggedin userdata
                  accessToken:
                    type: string
                    description: Access token for protected routes
                  refreshToken:
                    type: string
                    description: Refresh token for obtaining new access tokens
        401:
          description: Invalid username or password

  /api/userExists:
    post:
      summary: User existence
      tags: [User]
      parameters:
      - in: body
        name: username
        description: User data
        required: true
        schema:
          type: object
          properties:
            username:
              type: string
              description: Username for login
      responses:
        200:
          description: Login successful. Returns access and refresh tokens.
          content:
            application/json:
              schema:
                type: object
                properties:
                  isUser:
                    type: boolean
                    description: Specifies user existense
                  message:
                    type: string
                    description: Api response message
        401:
          description: Invalid username
  /api/registerUser:
    post:
      summary: User Registration
      tags: [User]
      parameters:
      - in: body
        name: data
        description: User data
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
              description: name for login
            email:
              type: string
              description: email for login
            phone:
              type: string
              description: email for login
            don:
              type: string
              description: email for login
      responses:
        200:
          description: Registration successful. Returns user id.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: Registered userId
        401:
          description: Invalid Request
